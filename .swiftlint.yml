# Rules documentation: https://realm.github.io/SwiftLint/rule-directory.html

# Disable rules that are too strict for this project
disabled_rules:
  - trailing_whitespace  # Let the editor handle this
  - line_length          # Allow longer lines (default: 120)
  - function_body_length # Allow longer functions (default: 40)
  - type_body_length     # Allow longer type declarations (default: 200)
  - file_length          # Allow longer files (default: 400)
  - identifier_name      # Allow non-camelCase identifiers for API compatibility
  - type_name            # Allow non-camelCase type names for API compatibility

# Configure rules
line_length: 160
function_body_length: 80
type_body_length: 400
file_length: 1000

# Only warn for force unwrapping
force_cast: warning
force_try: warning
force_unwrapping: warning

# Allow force_cast in test files
disable_rules_in_comment:
  - force_cast
  - force_try
  - force_unwrapping

# Exclude generated files and dependencies
excluded:
  - .build
  - Build
  - build
  - Carthage
  - Pods
  - Source/Generated
  - .swiftpm
  - .git
  - .github
  - fastlane
  - docs
  - local
  - Tests/LinuxMain.swift

# Custom rules
custom_rules:
  # Disallow print statements in production code
  print_statement:
    name: "Print Statement"
    message: "Prefer using a proper logging system over print()"
    regex: '\bprint\('
    match_kinds: call
    severity: warning
    excluded: 
      - "*.playground"
      - "*Tests.swift"
      - "*Test.swift"
      - "*Tests/*"
      - "*Test/*"

# Opt-in rules (enable specific rules that are off by default)
opt_in_rules:
  - anyobject_protocol
  - attributes
  - closure_param_position
  - collection_alignment
  - contains_over_first_not_nil
  - discouraged_optional_boolean
  - discouraged_optional_collection
  - empty_collection_literal
  - empty_count
  - empty_string
  - explicit_init
  - explicit_self
  - fallthrough
  - fatal_error_message
  - first_where
  - implicit_return
  - implicitly_unwrapped_optional
  - is_disjoint
  - joined_default_parameter
  - let_var_whitespace
  - literal_expression_end_indentation
  - multiline_parameters
  - multiline_parameters_brackets
  - multiline_arguments
  - multiline_arguments_brackets
  - multiline_literal_brackets
  - multiline_function_chains
  - no_extension_access_modifier
  - no_fallthrough_only
  - no_grouping_extension
  - no_space_in_method_call
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - operator_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - private_outlet
  - private_subject
  - prohibited_super_call
  - redundant_nil_coalescing
  - required_enum_case
  - return_arrow_whitespace
  - sorted_first_last
  - static_operator
  - strict_fileprivate
  - switch_case_on_newline
  - toggle_bool
  - trailing_closure
  - trailing_comma
  - type_contents_order
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - unowned_variable_capture
  - unused_import
  - unused_optional_binding
  - valid_ibinspectable
  - vertical_parameter_alignment_on_call
  - vertical_whitespace
  - void_return
  - yoda_condition
